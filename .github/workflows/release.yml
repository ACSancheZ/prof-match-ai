name: Node.js Release on Tag

on:
  push:
    tags:
      - '*'
    branches:
      - master

permissions:
  contents: write  # Ensure the workflow has write permissions

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build the application
      run: npm run build
    - name: Check if release exists
      id: check_release
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                          -H "Accept: application/vnd.github.v3+json" \
                          https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME \
                          | jq -r '.id')
        if [ "$RELEASE_ID" == "null" ]; then
          echo "Release does not exist. Proceeding to create a new release."
        else
          echo "Release already exists. Skipping release creation."
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
        fi
        
    - name: Create release
      id: create_release
      if: steps.check_release.outputs.RELEASE_ID == ''
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload main.js
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main.js
        asset_name: main.js
        asset_content_type: application/javascript

    - name: Upload manifest.json
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: manifest.json
        asset_name: manifest.json
        asset_content_type: application/json
